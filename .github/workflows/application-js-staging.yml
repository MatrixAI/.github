name: "CI / Application JS Staging"

on:
  workflow_call:
    secrets:
      NIXPKGS_PRIVATE_PAT:
        required: true
      GH_TOKEN:
        required: true
      GIT_AUTHOR_EMAIL:
        required: true
      GIT_AUTHOR_NAME:
        required: true
      GIT_COMMITTER_EMAIL:
        required: true
      GIT_COMMITTER_NAME:
        required: true

jobs:
  # Lint the code
  staging-lint:
    name: "Staging / Lint"
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4
      - uses: MatrixAI/.github/.github/actions/matrixai-env-setup@master
      - name: Run linting
        env:
          NIX_CONFIG: access-tokens = github.com=${{ secrets.NIXPKGS_PRIVATE_PAT }}
        run: |
          nix develop .#ci --command bash -c $'
          npm run lint
          '

  # Run a dry run
  staging-dry:
    name: "Staging / Dry Run"
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4
      - uses: MatrixAI/.github/.github/actions/matrixai-env-setup@master
      - name: Dry run
        env:
          NIX_CONFIG: access-tokens = github.com=${{ secrets.NIXPKGS_PRIVATE_PAT }}
        run: |
          nix build .#default --dry-run
          nix build .#docker --dry-run

  # Create the merge PR
  staging-merge-begin:
    name: "Staging / Merge Begin"
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - uses: actions/checkout@v4
      - name: Create Pull Request from Staging to Master
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh pr create \
            --head staging \
            --base master \
            --assignee '@me' \
            --title "ci: merge staging to master" \
            --body "This is an automatic PR generated by the CI/CD pipeline. This will be automatically fast-forward merged if successful." \
            --no-maintainer-edit || true
          printf "Pipeline Attempt on $GITHUB_RUN_ID for $GITHUB_SHA\n\n$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID" \
          | gh pr comment staging \
            --body-file - \
            --repo "$GITHUB_REPOSITORY"

  staging-merge-finish:
    name: "Staging / Merge Finish"
    needs: 
      - staging-lint
      - staging-dry
      - staging-merge-begin
    runs-on: ubuntu-latest
    concurrency:
      group: staging-merge-finish
      cancel-in-progress: true
    permissions:
      contents: write
      pull-requests: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GH_TOKEN }}
      - name: Merge Pull Request from Staging to Master
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GIT_AUTHOR_EMAIL: ${{ secrets.GIT_AUTHOR_EMAIL }}
          GIT_AUTHOR_NAME: ${{ secrets.GIT_AUTHOR_NAME }}
          GIT_COMMITTER_EMAIL: ${{ secrets.GIT_COMMITTER_EMAIL }}
          GIT_COMMITTER_NAME: ${{ secrets.GIT_COMMITTER_NAME }}
        run: |
          printf "Pipeline Succeeded on $GITHUB_RUN_ID for $GITHUB_SHA\n\n$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID" \
          | gh pr comment staging \
            --body-file - \
            --repo "$GITHUB_REPOSITORY"
          git checkout master
          git merge --ff-only "$GITHUB_SHA"
          git push origin master
